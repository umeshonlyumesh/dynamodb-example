spring:
  kafka:
    bootstrap-servers: kafka.ecfk-001.mdw-lab.truist-dev.com:443
    properties:
      security.protocol: SSL
      ssl.truststore.location: /etc/kafka/secrets/kafka.client.truststore.jks
      ssl.truststore.password: changeit
      ssl.keystore.location: /etc/kafka/secrets/kafka.client.keystore.jks
      ssl.keystore.password: changeit
      ssl.key.password: changeit
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
      group-id: my-consumer-group

-------------------------------------------

spring:
  kafka:
    bootstrap-servers: kafka.ecfk-001.mdw-lab.truist-dev.com:443
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="pezkafka.truist-dev.com" \
        password="your-secret-password";
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
      group-id: my-consumer-group


----------------------
@RestController
@RequestMapping("/kafka")
public class KafkaController {

    private final OrderProducer producer;

    public KafkaController(OrderProducer producer) {
        this.producer = producer;
    }

    @PostMapping("/publish")
    public String publish(@RequestParam String topic, @RequestParam String msg) {
        producer.send(topic, msg);
        return "Message published to " + topic;
    }
}

-------------------------------------------
@Service
public class OrderConsumer {

    @KafkaListener(topics = "pezkf-orders", groupId = "my-consumer-group")
    public void listen(String message) {
        System.out.println("Received message: " + message);
    }
}

=============================
@Service
public class OrderProducer {
    private final KafkaTemplate<String, String> kafkaTemplate;

    public OrderProducer(KafkaTemplate<String, String> kafkaTemplate) {
        this.kafkaTemplate = kafkaTemplate;
    }

    public void send(String topic, String message) {
        kafkaTemplate.send(topic, message);
        System.out.println("Sent message: " + message);
    }
}
==============================

spring:
  kafka:
    bootstrap-servers: kafka.ecfk-001.mdw-lab.truist-dev.com:443
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="pezkafka.truist-dev.com" \
        password="your-password";
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
      group-id: my-consumer-group


