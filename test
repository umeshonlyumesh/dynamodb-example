package com.fraudsdk.service;

import com.github.jknack.handlebars.Handlebars;
import com.github.jknack.handlebars.Helper;
import com.github.jknack.handlebars.Template;
import com.github.jknack.handlebars.internal.text.StringEscapeUtils;

import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;

public class Test {

    public static void main(String[] args) throws IOException {
        Handlebars hb = new Handlebars();

        // Helper: one flat map, check by key
        hb.registerHelper("optNil", (Helper<String>) (key, options) -> {
            @SuppressWarnings("unchecked")
            Map<String, Object> map = (Map<String, Object>) options.context.model();
            Object raw = map.get(key);

            String ns = "eh";
            String val = raw == null ? null : raw.toString().trim();

            if (val == null || val.isEmpty()) {
                return "<" + ns + ":" + key + " xsi:nil=\"true\" />";
            } else {
                String safe = StringEscapeUtils.escapeXml11(val);
                return "<" + ns + ":" + key + ">" + safe + "</" + ns + ":" + key + ">";
            }
        });

        // 2) Template â€” all tags reference flat map keys
        String templateStr = """
<?xml version="1.0" encoding="UTF-8"?>
<soapenv:Envelope
  xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:eh="http://eh.actimize.com"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header/>
  <soapenv:Body>
    <eh:FF_WS_evaluateGeneric_V22>
      <eh:generic>

        <eh:partyRelationReference>
          {{{optNil "partyRelationType"}}}
          {{{optNil "startDate"}}}
        </eh:partyRelationReference>

        <eh:versionData>
          {{{optNil "transactionActionCd"}}}
          {{{optNil "transactionStatusCd"}}}
          {{{optNil "transactionVersionDescription"}}}
        </eh:versionData>

      </eh:generic>
    </eh:FF_WS_evaluateGeneric_V22>
  </soapenv:Body>
</soapenv:Envelope>
""";

        // 3) Flat map input
        Map<String, Object> model = new HashMap<>();
        model.put("partyRelationType", "ABC");             // has value
        //model.put("startDate", null);

        // 4) Compile and render
        Template tpl = hb.compileInline(templateStr);
        String xml = tpl.apply(model);

        // 5) Print
        System.out.println(xml);
    }
}
