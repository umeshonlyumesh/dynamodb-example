package com.example.payments.dto;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Represents the paymentInfo section of the JSON payload
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class PaymentInfo {

    private String uetr;
    private String userID;
    private String transactionId;
    private String transactionNormalizedCdtTm;
    private String transactionCdtTm;
    private String partyId;
    private String partyIdType;

    private String amount;
    private String normalizedAmount;
    private String amountType;

    private String currency;

    private String debitAccountNumber;
    private String debitAccountNumberType;
    private String debitBankId;
    private String debitBankIdType;
    private String debitAccountDescription;

    private String creditAccountNumber;
    private String creditAccountNumberType;
    private String creditBankId;
    private String creditBankIdType;
    private String creditAccountDescription;

    private String methodOfPayment;
    private String source;
    private String settlementDate;
    private String customerSegment;

    private String transactionSendingSystemCd;
    private String transactionOriginationSystemCd;
    private String transactionType;

    private String sessionKey;
    private String approverUserID;
    private String resendDueToFailureInd;
}


=============
package com.example.payments.dto;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class PaymentEngineRequest {

    private Header header;
    private PaymentInfo paymentInfo;
    private Qualification qualification;
    private MemoPost memoPost;
    private FraudCheck fraudCheck;
    private CustomerAlert customerAlert;

    // ---------- Nested DTOs ----------

    @Data
    @Builder
    @NoArgsConstructor
    @AllArgsConstructor
    public static class Header {
        private String sourceId;
        private Operation operation; // now enum
        private String requestId;
    }

    public enum Operation {
        QUALIFICATION,
        POSTING,
        FRAUD_CHECK,
        CUSTOMER_ALERT
    }

    @Data
    @Builder
    @NoArgsConstructor
    @AllArgsConstructor
    public static class Qualification {
        private Step accountValidation;
        private Step balanceInquiry;
        private Step enrichment;
        private PreAuthorization preAuthorization;
    }

    @Data
    @Builder
    @NoArgsConstructor
    @AllArgsConstructor
    public static class Step {
        private String side; // (D)ebit | (C)redit | (B)oth
    }

    @Data
    @Builder
    @NoArgsConstructor
    @AllArgsConstructor
    public static class PreAuthorization {
        private String side;
        private String description1;
    }

    @Data
    @Builder
    @NoArgsConstructor
    @AllArgsConstructor
    public static class MemoPost {
        private String side;
        private String tranReference;
        private String description1;
        private String description2;
    }

    @Data
    @Builder
    @NoArgsConstructor
    @AllArgsConstructor
    public static class FraudCheck {
        private String type; // Fraud | AML
        private List<Parameter> parameters;
    }

    @Data
    @Builder
    @NoArgsConstructor
    @AllArgsConstructor
    public static class Parameter {
        private String name;
        private String value;
    }

    @Data
    @Builder
    @NoArgsConstructor
    @AllArgsConstructor
    public static class CustomerAlert {
        private String alertType;
        private String message;
        private String severity;
    }
}

